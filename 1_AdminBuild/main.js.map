{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-load/app-load.module.ts","webpack:///./src/app/app-load/app-load.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/config-master/config-master.component.css","webpack:///./src/app/config-master/config-master.component.html","webpack:///./src/app/config-master/config-master.component.ts","webpack:///./src/app/default-selection/default-selection.component.css","webpack:///./src/app/default-selection/default-selection.component.html","webpack:///./src/app/default-selection/default-selection.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/layout/layout.component.css","webpack:///./src/app/layout/layout.component.html","webpack:///./src/app/layout/layout.component.ts","webpack:///./src/app/menu-master/menu-master.component.css","webpack:///./src/app/menu-master/menu-master.component.html","webpack:///./src/app/menu-master/menu-master.component.ts","webpack:///./src/app/server-config/server-config.component.css","webpack:///./src/app/server-config/server-config.component.html","webpack:///./src/app/server-config/server-config.component.ts","webpack:///./src/app/settings/index.ts","webpack:///./src/app/settings/settings.ts","webpack:///./src/app/shared.service.ts","webpack:///./src/app/sidemenu/sidemenu.component.css","webpack:///./src/app/sidemenu/sidemenu.component.html","webpack:///./src/app/sidemenu/sidemenu.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { AppLoadService } from './app-load.service';\n\nexport function init_app(appLoadService: AppLoadService) {\n    return () => appLoadService.initializeApp();\n}\n\nexport function get_settings(appLoadService: AppLoadService) {\n    return () => appLoadService.getSettings();\n}\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [\n    AppLoadService,\n    { provide: APP_INITIALIZER, useFactory: init_app, deps: [AppLoadService], multi: true },\n    { provide: APP_INITIALIZER, useFactory: get_settings, deps: [AppLoadService], multi: true }\n  ]\n})\nexport class AppLoadModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport 'rxjs/add/operator/toPromise';\n\nimport { APP_SETTINGS } from '../settings';\n\n@Injectable()\nexport class AppLoadService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  initializeApp(): Promise<any> {\n    return new Promise((resolve, reject) => {\n          console.log(`initializeApp:: inside promise`);\n\n          setTimeout(() => {\n            console.log(`initializeApp:: inside setTimeout`);\n            // doing something\n\n            resolve();\n          }, 1000);\n        });\n  }\n\n  getSettings(): Promise<any> {\n    console.log(`getSettings:: before http.get call`);\n    \n    const promise = this.httpClient.get('assets/appconfig.json')\n      .toPromise()\n      .then((settings:any) => {\n        console.log(`Settings from API: `, settings);\n\n        APP_SETTINGS.serviceUrl = settings.serviceUrl;\n        APP_SETTINGS.singleConfiguratorUrl = settings.singleConfiguratorUrl;\n\n        console.log(`APP_SETTINGS: `, APP_SETTINGS);\n\n        return settings;\n      });\n\n    return promise;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-layout>\\n\\n    <div *ngIf=\\\"!showAccordian\\\" class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"loginPanel\\\">\\n                <h2>Admin Login</h2>\\n                <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">Username</label>\\n                        <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\"\\n                        />\\n                        <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"password\\\">Password</label>\\n                        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n                        />\\n                        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <button  class=\\\"btn btn-primary\\\">Login</button>\\n                        <!-- <a [routerLink]=\\\"['/register']\\\" class=\\\"btn btn-link\\\">Register</a> -->\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"showAccordian\\\">\\n        <p-accordion>\\n            <p-accordionTab header=\\\"Step 1: App Level Constants\\\">\\n                <p-panel header=\\\"Description\\\">\\n                    <app-config-master [role]=\\\"role\\\"></app-config-master>\\n                </p-panel>\\n            </p-accordionTab>\\n\\n            <p-accordionTab header=\\\"Step 2: Define Menu\\\">\\n                <p-panel header=\\\"Description\\\">\\n                    <app-menu-master [role]=\\\"role\\\"></app-menu-master>\\n                </p-panel>\\n            </p-accordionTab>\\n\\n            <!-- <p-accordionTab header=\\\"Step 3: Default Selections\\\">\\n                <p-panel header=\\\"Description\\\">\\n                    <app-default-selection [role]=\\\"role\\\"></app-default-selection>\\n                </p-panel>\\n            </p-accordionTab> -->\\n            <p-accordionTab header=\\\"Step 3: Server Config\\\">\\n                <p-panel header=\\\"Description\\\">\\n                    <app-server-config [role]=\\\"role\\\"></app-server-config>\\n                </p-panel>\\n            </p-accordionTab>\\n\\n            <p-accordionTab header=\\\"Step 3: Side Menu\\\">\\n                <p-panel header=\\\"Description\\\">\\n                    <app-sidemenu [role]=\\\"role\\\"></app-sidemenu>\\n                </p-panel>\\n            </p-accordionTab>\\n        </p-accordion>\\n    </div>\\n</app-layout>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { SharedService } from \"./shared.service\";\n\n\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    showAccordian:boolean = false;\n\n    role:any;\n\n    constructor(private formBuilder: FormBuilder,\n        private sharedService:SharedService,\n        private router: Router) { }\n\n    get f() { return this.loginForm.controls; }\n\n    ngOnInit() {\n        this.showAccordian = false;\n        this.loginForm = this.formBuilder.group({\n            username: ['talele', Validators.required],\n            password: ['mahindra@123', Validators.required]\n        });\n    }\n    \n    onSubmit() {\n        this.submitted = true;\n\n        console.log(this.loginForm);\n\n        if (this.loginForm.invalid) {\n            return;\n        } else {\n            this.sharedService.post('/loginForAdminPanel',{\n                \"username\": this.loginForm.value.username, \n                \"password\": this.loginForm.value.password,\n            }).subscribe((d:any)=>{\n                console.log(d);\n                if (d.ResponseString == 1) {\n                    console.log(\"User Logged in Sucessfully\");\n                    sessionStorage.setItem(\"userDetails\",JSON.stringify(d.ResponseObject[0]));\n                    this.role = d.ResponseObject[0].role;\n                    this.showAccordian = true;\n                } else {\n                    alert(\"Kindly Check your Credentials\");\n                }\n            })\n        }\n        // if(this.loginForm.value.username==\"admin\" && this.loginForm.value.password==\"admin\") {\n        //     console.log(\"Login Sucessful\");\n        //     this.showAccordian = true;\n        // }\n\n        this.loading = true;\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppLoadModule } from './app-load/app-load.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { TableModule } from 'primeng/table';\nimport { DialogModule } from 'primeng/dialog';\nimport { CarouselModule } from 'primeng/carousel';\nimport { AccordionModule } from 'primeng/accordion';\nimport { TooltipModule } from 'primeng/tooltip';\n\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PanelModule } from 'primeng/panel';\nimport { AppComponent } from './app.component';\n\nimport { SharedService } from \"./shared.service\";\nimport { ConfigMasterComponent } from './config-master/config-master.component';\nimport { MenuMasterComponent } from './menu-master/menu-master.component';\nimport { DefaultSelectionComponent } from './default-selection/default-selection.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { ServerConfigComponent } from './server-config/server-config.component';\nimport { SidemenuComponent } from './sidemenu/sidemenu.component';\n\n\nconst appRoutes: Routes = [\n  { path: '**', redirectTo: '' }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConfigMasterComponent,\n    MenuMasterComponent,\n    DefaultSelectionComponent,\n    HeaderComponent,\n    FooterComponent,\n    LayoutComponent,\n    ServerConfigComponent,\n    SidemenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppLoadModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TableModule,\n    HttpClientModule,\n    InputTextModule,\n    DialogModule,\n    ButtonModule,\n    CarouselModule,\n    BrowserAnimationsModule,\n    PanelModule,\n    TooltipModule,\n    AccordionModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [SharedService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbmZpZy1tYXN0ZXIvY29uZmlnLW1hc3Rlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p-dialog header=\\\"App Config Details\\\" [(visible)]=\\\"displayDialogForAppconfig\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\"\\n  [closable]=\\\"true\\\" [width]=\\\"700\\\">\\n  <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"selectedAppConfigRow\\\">\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"Key\\\">Key</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pInputText pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" id=\\\"key\\\" [disabled]=\\\"'true'\\\" [(ngModel)]=\\\"selectedAppConfigRow.key\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"Value\\\">Value</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pInputText pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" id=\\\"value\\\" [(ngModel)]=\\\"selectedAppConfigRow.value\\\" />\\n    </div>\\n\\n  </div>\\n  <p-footer>\\n    <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n      <div *ngIf=\\\"role=='user'\\\">\\n          <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"appConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n      </div>\\n\\n      <div *ngIf=\\\"role=='admin'\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"appConfigDelete()\\\" label=\\\"Delete\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"appConfigSave()\\\" label=\\\"Save\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"appConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n      </div>\\n\\n    </div>\\n  </p-footer>\\n</p-dialog>\\n\\n\\n<p-table [columns]=\\\"appConfigCols\\\" [value]=\\\"appConfigRows\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedAppConfigRow\\\" (onRowSelect)=\\\"onRowSelectAppConfig($event)\\\"\\n  [paginator]=\\\"false\\\" rows=\\\"10\\\">\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\">\\n        {{col.header}}\\n      </th>\\n    </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\n      <td *ngFor=\\\"let col of columns\\\">\\n        {{rowData[col.field]}}\\n      </td>\\n    </tr>\\n  </ng-template>\\n\\n  <ng-template pTemplate=\\\"summary\\\" let-rowData>\\n    <div style=\\\"text-align:left\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"pi pi-plus\\\" (click)=\\\"showDialogToAddAppConfig()\\\" label=\\\"Add\\\"></button>\\n    </div>\\n  </ng-template>\\n</p-table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-config-master',\n  templateUrl: './config-master.component.html',\n  styleUrls: ['./config-master.component.css']\n})\nexport class ConfigMasterComponent implements OnInit {\n\n  displayDialogForAppconfig: boolean;\n  selectedAppConfigRow: any;\n  appConfigRows: any;\n  appConfigCols: any;\n  newAppConfig: boolean = false;\n\n  @Input() role:any;\n\n\n  constructor(private sharedService: SharedService) { }\n\n  ngOnInit() {\n\n    this.appConfigCols = [\n      { field: 'key', header: 'Key' },\n      { field: 'value', header: 'Value' },\n    ];\n    this.initialize();\n  }\n\n  ngOnChanges(change) {\n    console.log(\"Change Received in COnfig Master\", this.role);\n\n  }\n\n  initialize() {\n    this.sharedService.getMasterConfig().subscribe((config: any) => {\n      this.appConfigRows = config.appLevelConfig.sort(function(a, b){\n        if(a.key < b.key) { return -1; }\n        if(a.key > b.key) { return 1; }\n        return 0;\n    });\n    });\n  }\n\n  onRowSelectAppConfig(event) {\n    this.selectedAppConfigRow = { ...event.data };\n    this.displayDialogForAppconfig = true;\n  }\n\n  showDialogToAddAppConfig() {\n    this.newAppConfig = true;\n    this.selectedAppConfigRow = {};\n    this.displayDialogForAppconfig = true;\n  }\n\n  appConfigSave() {\n    if (this.newAppConfig) {\n      // direct insert to mongoDb\n      this.selectedAppConfigRow[\"opType\"] = 1\n      console.log(\"To Insert New Document:- \", this.selectedAppConfigRow);\n    } else {\n      // find index and update to mongodb\n      this.selectedAppConfigRow[\"opType\"] = 0\n      console.log(\"To Update Document:- \", this.selectedAppConfigRow);\n    }\n\n    this.crudAndRefresh();\n    \n    this.displayDialogForAppconfig = false;\n  }\n\n  crudAndRefresh() {\n    this.sharedService.saveOrUpdateAppConfig(this.selectedAppConfigRow).subscribe((d: any) => {\n      this.initialize();\n      console.log(\" crudAndRefresh \", d);\n    });\n  }\n\n  appConfigDelete() {\n    this.selectedAppConfigRow[\"opType\"] = -1;\n    this.crudAndRefresh();\n    this.selectedAppConfigRow = null;\n    this.displayDialogForAppconfig = false;\n    console.log(\"After Deleting\");\n  }\n\n  appConfigCancel() {\n    this.displayDialogForAppconfig = false;\n  }\n\n  // APP Config Table Ends Here\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlZmF1bHQtc2VsZWN0aW9uL2RlZmF1bHQtc2VsZWN0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p-dialog header=\\\"App Config Details\\\" [(visible)]=\\\"displayDialogForAppconfig\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\"\\n  [closable]=\\\"true\\\" [width]=\\\"700\\\">\\n  <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"selectedAppConfigRow\\\">\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"Key\\\">Field Name</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input  pInputText pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" id=\\\"key\\\"  [disabled]=\\\"'true'\\\" [(ngModel)]=\\\"selectedAppConfigRow.fieldName\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"Value\\\">Field Value</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" pInputText id=\\\"value\\\" [(ngModel)]=\\\"selectedAppConfigRow.fieldValue\\\" />\\n    </div>\\n\\n  </div>\\n  <p-footer>\\n    <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n\\n      <div *ngIf=\\\"role=='user'\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"appConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n      </div>\\n\\n      <div *ngIf=\\\"role=='admin'\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"appConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"appConfigDelete()\\\" label=\\\"Delete\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"appConfigSave()\\\" label=\\\"Save\\\"></button>\\n      </div>\\n\\n    </div>\\n  </p-footer>\\n</p-dialog>\\n\\n\\n<p-table [columns]=\\\"appConfigCols\\\" [value]=\\\"appConfigRows\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedAppConfigRow\\\" (onRowSelect)=\\\"onRowSelectAppConfig($event)\\\"\\n  [paginator]=\\\"false\\\" rows=\\\"10\\\">\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\">\\n        {{col.header}}\\n      </th>\\n    </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\n      <td *ngFor=\\\"let col of columns\\\">\\n        {{rowData[col.field]}}\\n      </td>\\n    </tr>\\n  </ng-template>\\n\\n  <ng-template pTemplate=\\\"summary\\\" let-rowData>\\n    <div style=\\\"text-align:left\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"pi pi-plus\\\" (click)=\\\"showDialogToAddAppConfig()\\\" label=\\\"Add\\\"></button>\\n    </div>\\n  </ng-template>\\n</p-table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-default-selection',\n  templateUrl: './default-selection.component.html',\n  styleUrls: ['./default-selection.component.css']\n})\nexport class DefaultSelectionComponent implements OnInit {\n\n  displayDialogForAppconfig: boolean;\n  selectedAppConfigRow: any;\n  appConfigRows: any;\n  appConfigCols: any;\n  newAppConfig: boolean = false;\n\n  @Input() role:any;\n\n  constructor(private sharedService: SharedService) { }\n\n  ngOnInit() {\n\n    this.appConfigCols = [\n      { field: 'fieldName', header: 'Field Name' },\n      { field: 'fieldValue', header: 'Field Value' },\n    ];\n\n    this.initialize();\n\n  }\n\n  initialize() {\n    this.sharedService.getMasterConfig().subscribe((config: any) => {\n      this.appConfigRows = config.selectionConfig;\n    });\n  }\n\n  onRowSelectAppConfig(event) {\n    this.selectedAppConfigRow = { ...event.data };\n    this.displayDialogForAppconfig = true;\n  }\n\n  showDialogToAddAppConfig() {\n    this.newAppConfig = true;\n    this.selectedAppConfigRow = {};\n    this.displayDialogForAppconfig = true;\n  }\n\n  appConfigSave() {\n    if (this.newAppConfig) {\n      // direct insert to mongoDb\n      this.selectedAppConfigRow[\"opType\"] = 1\n      console.log(\"To Insert New Document:- \", this.selectedAppConfigRow);\n    } else {\n      // find index and update to mongodb\n      this.selectedAppConfigRow[\"opType\"] = 0\n      console.log(\"To Update Document:- \", this.selectedAppConfigRow);\n    }\n\n    this.crudAndRefresh();\n    \n    this.displayDialogForAppconfig = false;\n  }\n\n  crudAndRefresh() {\n    this.sharedService.saveOrUpdateDefaultSelections(this.selectedAppConfigRow).subscribe((d: any) => {\n      this.initialize();\n      console.log(\" crudAndRefresh \", d);\n    });\n  }\n\n  appConfigDelete() {\n    this.selectedAppConfigRow[\"opType\"] = -1;\n    this.crudAndRefresh();\n    this.selectedAppConfigRow = null;\n    this.displayDialogForAppconfig = false;\n    console.log(\"After Deleting\");\n  }\n\n  appConfigCancel() {\n    this.displayDialogForAppconfig = false;\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mt-5 fixed-bottom\\\">\\n  <div class=\\\"navbar-expand m-auto navbar-text\\\">\\n    Copyrights Reserved &copy; <a href=\\\"https://www.mahindra.com\\\">Mahindra & Mahindra LTD.</a>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">Admin Panel</a>\\n  <div class=\\\"mahindra_logo_wrapper\\\">\\n    <img src=\\\"./assets/images/mnmlogo.png\\\" class=\\\"mahindra_logo\\\">\\n  </div>\\n  <div class=\\\"navbar-expand mr-auto\\\">\\n    <!-- <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link active\\\" href=\\\"#\\\">Home</a>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"#\\\">About</a>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"#\\\">Contact</a>\\n    </div> -->\\n  </div>\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-github\\\"></i>\\n      </a>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-twitter\\\"></i>\\n      </a>\\n      <a class=\\\"nav-item nav-link\\\" href=\\\"\\\" target=\\\"_blank\\\">\\n        <i class=\\\"fa fa-medium\\\"></i>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9sYXlvdXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <ng-content></ng-content>\\n</div>\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUtbWFzdGVyL21lbnUtbWFzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p-dialog header=\\\"Menu Config Details\\\" [(visible)]=\\\"displayDialogForMenuconfig\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\"\\n  [closable]=\\\"true\\\" [width]=\\\"700\\\">\\n  <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"selectedMenuConfigRow\\\">\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"Sequence\\\">Sequence</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pInputText pTooltip=\\\"Sequence should be in number only eg : 1\\\" tooltipPosition=\\\"bottom\\\" id=\\\"nSequence\\\" [(ngModel)]=\\\"selectedMenuConfigRow.nSequence\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"isLandingMenu\\\">Menu Level</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pInputText pTooltip=\\\"Menu Level should be in number only eg : 1\\\" tooltipPosition=\\\"bottom\\\" id=\\\"isLandingMenu\\\" [(ngModel)]=\\\"selectedMenuConfigRow.isLandingMenu\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"Value\\\">Name</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pInputText pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" id=\\\"name\\\" [(ngModel)]=\\\"selectedMenuConfigRow.name\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"Value\\\">Lib ID</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <!-- <input pInputText id=\\\"strLibID\\\" [(ngModel)]=\\\"selectedMenuConfigRow.strLibID\\\" /> -->\\n      <select class=\\\"form-control\\\" pTooltip=\\\"Select Lib ID\\\" tooltipPosition=\\\"bottom\\\" id=\\\"power\\\" [(ngModel)]=\\\"selectedMenuConfigRow.strLibID\\\">\\n        <option *ngFor=\\\"let sheetqIds of qlikLibIds\\\" [value]=\\\"sheetqIds.libId\\\">{{ sheetqIds.sheetTitle }} - ( {{ sheetqIds.libId }} )</option>\\n      </select>\\n    </div>\\n\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"reqType\\\">Req. Type</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pInputText pTooltip=\\\"Req. Type should be in number only -> 1 : Single Object & default selections | 2 : Multiple Objects(Reports) | 3 : On th fly objects | 4 : only selection buttons\\\" tooltipPosition=\\\"bottom\\\" id=\\\"reqType\\\" [(ngModel)]=\\\"selectedMenuConfigRow.reqType\\\" />\\n    </div>\\n\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"sheetName\\\">Sheet Name</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <select class=\\\"form-control\\\" pTooltip=\\\"Select Sheet Name to get Object from Object within that sheet\\\" tooltipPosition=\\\"bottom\\\" id=\\\"power\\\" (change)=\\\"onSheetNemeChange($event)\\\" [(ngModel)]=\\\"selectedMenuConfigRow.sheetName\\\">\\n        <option *ngFor=\\\"let sheet of sheetData\\\" [value]=\\\"sheet.SheetTitle\\\">{{sheet.SheetTitle}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"objId\\\">Object Id</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <select class=\\\"form-control\\\" pTooltip=\\\"Select Object id\\\" tooltipPosition=\\\"bottom\\\" id=\\\"power\\\" [(ngModel)]=\\\"selectedMenuConfigRow.objId\\\">\\n        <option *ngFor=\\\"let objIds of sheetWiseObjects\\\" [value]=\\\"objIds\\\">{{objIds}}</option>\\n      </select>\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"selections\\\">Selections</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pInputText pTooltip=\\\"FieldName$field value|FieldName$value Eg : Month$Feb|Year$F18\\\" tooltipPosition=\\\"bottom\\\" id=\\\"strAdditionalObjects\\\" [(ngModel)]=\\\"selectedMenuConfigRow.strSelections\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"objId\\\">Additinal Objects</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pInputText pTooltip=\\\"Additinal Objects For Reports Like X-style-List or DatePicker\\\" tooltipPosition=\\\"bottom\\\" id=\\\"strAdditionalObjects\\\" [(ngModel)]=\\\"selectedMenuConfigRow.strAdditionalObjects\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"btns\\\">Buttons</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pInputText pTooltip=\\\"ButtonName(ButtonValue)$FieldName|ButtonName(ButtonValue)$FieldName Eg: Trainee$Employee Category|Permanent$Employee Category\\\" tooltipPosition=\\\"bottom\\\" id=\\\"btns\\\" [(ngModel)]=\\\"selectedMenuConfigRow.btns\\\" />\\n    </div>\\n\\n  </div>\\n  <p-footer>\\n    <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n\\n      <div *ngIf=\\\"role=='user'\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"menuConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n      </div>\\n      <div *ngIf=\\\"role=='admin'\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"menuConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"menuConfigDelete()\\\" label=\\\"Delete\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"menuConfigSave()\\\" label=\\\"Save\\\"></button>\\n      </div>\\n    </div>\\n  </p-footer>\\n</p-dialog>\\n\\n\\n<p-table [columns]=\\\"menuConfigCols\\\" [value]=\\\"menuConfigRows\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedMenuConfigRow\\\"\\n  (onRowSelect)=\\\"onRowSelectMenuConfig($event)\\\" [paginator]=\\\"false\\\" rows=\\\"10\\\">\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\">\\n        {{col.header}}\\n      </th>\\n    </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\n      <td *ngFor=\\\"let col of columns\\\" style=\\\"word-wrap: break-word;\\\">\\n        <div *ngIf=\\\"col.type=='url'\\\">\\n          <a style=\\\"text-decoration: underline;color:red\\\" (click)=\\\"objectIdClicked(rowData[col.field])\\\"> {{rowData[col.field]}} </a>\\n        </div>\\n        <div *ngIf=\\\"col.type=='string'\\\">\\n          {{rowData[col.field]}}\\n        </div>\\n      </td>\\n    </tr>\\n  </ng-template>\\n\\n  <ng-template pTemplate=\\\"summary\\\" let-rowData>\\n    <div style=\\\"text-align:left\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"pi pi-plus\\\" (click)=\\\"showDialogToAddMenuConfig()\\\" label=\\\"Add\\\"></button>\\n    </div>\\n  </ng-template>\\n</p-table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { APP_SETTINGS } from \"../settings/settings\";\nimport { SharedService } from '../shared.service';\nimport { debug } from 'util';\n\n@Component({\n  selector: 'app-menu-master',\n  templateUrl: './menu-master.component.html',\n  styleUrls: ['./menu-master.component.css']\n})\nexport class MenuMasterComponent implements OnInit {\n\n  wholeMetaData: any;\n\n  displayDialogForMenuconfig: boolean;\n  selectedMenuConfigRow: any;\n  menuConfigRows: any;\n  menuConfigCols: any;\n  newMenuConfig: boolean = false;\n\n  @Input() role:any;\n\n  sheetData: any;\n  sheetWiseObjects: any;\n\n  constructor(private sharedService: SharedService) { }\n\n  objectIdClicked(objId) {\n    console.log(objId);\n    // \"http://qsdev.mahindra.com/single/?appid=d2d69372-0872-4319-ab68-e2784c2db879&obj=\"\n    var url = APP_SETTINGS.singleConfiguratorUrl  + objId + \"&opt=nointeraction&select=clearall\";\n    window.open(url, '_blank');\n  }\n\n  qlikLibIds=[];\n\n  ngOnInit() {\n\n    this.sharedService.getMetaDataFromRedis().subscribe((meta: any) => {      \n      this.wholeMetaData = JSON.parse(JSON.parse(meta[\"metaHashMap\"]));\n\n      for (let i = 0; i < this.wholeMetaData.arrMesureList.length; i++) {\n        this.qlikLibIds.push({ sheetTitle: this.wholeMetaData.arrMesureList[i].data.title , libId:this.wholeMetaData.arrMesureList[i].info.qId });\n      }\n\n      this.sheetData = this.wholeMetaData.sheetwiseData; // SheetTitle sheetWiseObjects ObjectName\n    });\n\n    this.menuConfigCols = [\n      { field: 'nSequence', header: 'Sequence', type: 'string' },\n      { field: 'isLandingMenu', header: 'Menu Level', type: 'string' },\n      { field: 'name', header: 'Name', type: 'string' },\n      { field: 'reqType', header: 'Req. Type', type: 'string' },\n      { field: 'sheetName', header: 'Sheet Name', type: 'string' },\n      { field: 'objId', header: 'Object Id', type: 'url' },\n      { field: 'strLibID', header: 'Lib Id', type: 'string' },\n      // { field: 'btns', header: 'Buttons', type: 'string' },\n      // { field: 'strSelections', header: 'selections', type: 'string' },\n      // {  field: 'strAdditionalObjects', header: 'Additinal Objects', type: 'string' }\n    ];\n\n    this.initialize();\n  }\n\n  initialize() {\n    this.sharedService.getMasterConfig().subscribe((config: any) => {\n      this.menuConfigRows = config.menuLevelConfig.sort(function (a, b) { return a.nSequence - b.nSequence });;\n    });\n  }\n\n  bindObjects() {\n    this.sheetWiseObjects = [];\n    var matchedSheet = this.sheetData.filter(x => x.SheetTitle == this.selectedMenuConfigRow.sheetName);\n    if (matchedSheet.length > 0) {\n      this.sheetWiseObjects = matchedSheet[0].sheetWiseObjects.map(x => x.ObjectName);\n    } else {\n      this.sheetWiseObjects = [];\n    }\n  }\n\n  onRowSelectMenuConfig(event) {\n    this.selectedMenuConfigRow = { ...event.data };\n    this.bindObjects();\n    this.displayDialogForMenuconfig = true;\n  }\n\n  onSheetNemeChange(sheetname) {\n    console.log(sheetname);\n    this.sheetWiseObjects = [];\n    this.bindObjects();\n  }\n\n  showDialogToAddMenuConfig() {\n    this.newMenuConfig = true;\n    this.selectedMenuConfigRow = {};\n    this.displayDialogForMenuconfig = true;\n  }\n\n  menuConfigSave() {\n    this.selectedMenuConfigRow[\"isLandingMenu\"] = Number(this.selectedMenuConfigRow[\"isLandingMenu\"]);\n    this.selectedMenuConfigRow[\"nSequence\"] = Number(this.selectedMenuConfigRow[\"nSequence\"]);\n    this.selectedMenuConfigRow[\"isActive\"] = Number(0);\n    this.selectedMenuConfigRow[\"reqType\"] = Number(this.selectedMenuConfigRow[\"reqType\"]);\n    if (this.newMenuConfig) {\n      // direct insert to mongoDb\n      this.selectedMenuConfigRow[\"opType\"] = 1;\n      console.log(\"To Insert New Document:- \", this.selectedMenuConfigRow);\n    } else {\n      // find index and update to mongodb\n      this.selectedMenuConfigRow[\"opType\"] = 0\n      console.log(\"To Update Document:- \", this.selectedMenuConfigRow);\n    }\n\n    this.crudAndRefresh();\n\n    this.displayDialogForMenuconfig = false;\n  }\n\n  crudAndRefresh() {\n    this.sharedService.saveOrUpdateMenuConfig(this.selectedMenuConfigRow).subscribe((d: any) => {\n      this.initialize();\n      console.log(\" crudAndRefresh \", d);\n    });\n  }\n\n  menuConfigDelete() {\n    this.selectedMenuConfigRow[\"opType\"] = -1;\n    this.crudAndRefresh();\n    this.selectedMenuConfigRow = null;\n    this.displayDialogForMenuconfig = false;\n    console.log(\"After Deleting\");\n  }\n\n  menuConfigCancel() {\n    this.displayDialogForMenuconfig = false;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZlci1jb25maWcvc2VydmVyLWNvbmZpZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p-dialog header=\\\"App Config Details\\\" [(visible)]=\\\"displayDialogForAppconfig\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\"\\n  [closable]=\\\"true\\\" [width]=\\\"700\\\">\\n  <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"selectedAppConfigRow\\\">\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"Key\\\">Key</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" pInputText id=\\\"key\\\"  [disabled]=\\\"'true'\\\" [(ngModel)]=\\\"selectedAppConfigRow.key\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"Value\\\">Value</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" pInputText id=\\\"value\\\" [(ngModel)]=\\\"selectedAppConfigRow.value\\\" />\\n    </div>\\n\\n  </div>\\n  <p-footer>\\n    <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n\\n      <div *ngIf=\\\"role=='user'\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"appConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n      </div>\\n      <div *ngIf=\\\"role=='admin'\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"appConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"appConfigDelete()\\\" label=\\\"Delete\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"appConfigSave()\\\" label=\\\"Save\\\"></button>\\n      </div>\\n\\n    </div>\\n  </p-footer>\\n</p-dialog>\\n\\n\\n<p-table [columns]=\\\"appConfigCols\\\" [value]=\\\"appConfigRows\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedAppConfigRow\\\" (onRowSelect)=\\\"onRowSelectAppConfig($event)\\\"\\n  [paginator]=\\\"false\\\" rows=\\\"10\\\">\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\">\\n        {{col.header}}\\n      </th>\\n    </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\n      <td *ngFor=\\\"let col of columns\\\">\\n        {{rowData[col.field]}}\\n      </td>\\n    </tr>\\n  </ng-template>\\n\\n  <ng-template pTemplate=\\\"summary\\\" let-rowData>\\n    <div style=\\\"text-align:left\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"pi pi-plus\\\" (click)=\\\"showDialogToAddAppConfig()\\\" label=\\\"Add\\\"></button>\\n    </div>\\n  </ng-template>\\n</p-table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-server-config',\n  templateUrl: './server-config.component.html',\n  styleUrls: ['./server-config.component.css']\n})\nexport class ServerConfigComponent implements OnInit {\n\n  displayDialogForAppconfig: boolean;\n  selectedAppConfigRow: any;\n  appConfigRows: any;\n  appConfigCols: any;\n  newAppConfig: boolean = false;\n\n  @Input() role:any;\n\n  constructor(private sharedService: SharedService) { }\n\n  ngOnInit() {\n\n    this.appConfigCols = [\n      { field: 'key', header: 'Key' },\n      { field: 'value', header: 'Value' },\n    ];\n    this.initialize();\n  }\n\n  initialize() {\n    this.sharedService.getMasterConfig().subscribe((config: any) => {\n      this.appConfigRows = config.serverConfig.sort(function(a, b){\n        if(a.key < b.key) { return -1; }\n        if(a.key > b.key) { return 1; }\n        return 0;\n    });\n    });\n  }\n\n  onRowSelectAppConfig(event) {\n    this.selectedAppConfigRow = { ...event.data };\n    this.displayDialogForAppconfig = true;\n  }\n\n  showDialogToAddAppConfig() {\n    this.newAppConfig = true;\n    this.selectedAppConfigRow = {};\n    this.displayDialogForAppconfig = true;\n  }\n\n  appConfigSave() {\n    if (this.newAppConfig) {\n      // direct insert to mongoDb\n      this.selectedAppConfigRow[\"opType\"] = 1\n      console.log(\"To Insert New Document:- \", this.selectedAppConfigRow);\n    } else {\n      // find index and update to mongodb\n      this.selectedAppConfigRow[\"opType\"] = 0\n      console.log(\"To Update Document:- \", this.selectedAppConfigRow);\n    }\n\n    this.crudAndRefresh();\n    \n    this.displayDialogForAppconfig = false;\n  }\n\n  crudAndRefresh() {\n    this.sharedService.saveOrUpdateServerConfig(this.selectedAppConfigRow).subscribe((d: any) => {\n      this.initialize();\n      console.log(\" crudAndRefresh \", d);\n    });\n  }\n\n  appConfigDelete() {\n    this.selectedAppConfigRow[\"opType\"] = -1;\n    this.crudAndRefresh();\n    this.selectedAppConfigRow = null;\n    this.displayDialogForAppconfig = false;\n    console.log(\"After Deleting\");\n  }\n\n  appConfigCancel() {\n    this.displayDialogForAppconfig = false;\n  }\n\n\n}\n","export * from './settings';\n","export let APP_SETTINGS = {\n    serviceUrl: '',\n    singleConfiguratorUrl:''\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { HttpClient } from '@angular/common/http';\nimport { APP_SETTINGS } from \"./settings/settings\";\n\n@Injectable()\nexport class SharedService {\n\n  constructor(private http: HttpClient) { }\n\n  getMetaDataFromRedis() {\n    return this.http.get<any>(APP_SETTINGS.serviceUrl + '/getWholeMetaData?forceFulDbCacheUpdate=0&dbChoice=0');\n  }\n\n  getMasterConfig() {\n    return Observable.create(observer => {\n      this.http.get<any>(APP_SETTINGS.serviceUrl+'/getConfigMaster')\n        .toPromise()\n        .then(res => res)\n        .then(data => {\n          console.log(\"Master Config Received:- \", data);\n          observer.next(data)\n        });\n    })\n  }\n\n  saveOrUpdateAppConfig(body) {\n    return this.http.post<any>(APP_SETTINGS.serviceUrl + '/saveOrUpdateAppConfig', body);\n  }\n\n  saveOrUpdateServerConfig(body) {\n    return this.http.post<any>(APP_SETTINGS.serviceUrl + '/saveOrUpdateServerConfig', body);\n  }\n\n  saveOrUpdateMenuConfig(body) {\n    return this.http.post<any>(APP_SETTINGS.serviceUrl + '/saveOrUpdateMenuConfig', body);\n  }\n\n  saveOrUpdateDefaultSelections(body) {\n    return this.http.post<any>(APP_SETTINGS.serviceUrl + '/saveOrUpdateDefaultSelections', body);\n  }\n\n  saveOrUpdateSideMenuConfig(body) {\n    return this.http.post<any>(APP_SETTINGS.serviceUrl + '/saveOrUpdateSideMenuConfig', body);\n  }\n\n  post(url, body) {\n    return this.http.post<any>(APP_SETTINGS.serviceUrl + url, body);\n  }\n\n  // all operations are like upsert only\n  // if user clik new then it has to be insertOne operation\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZGVtZW51L3NpZGVtZW51LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p-dialog header=\\\"Side Menu Config Details\\\" [(visible)]=\\\"displayDialogForsideMenuconfig\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\"\\n  [closable]=\\\"true\\\" [width]=\\\"700\\\">\\n  <div class=\\\"ui-g ui-fluid\\\" *ngIf=\\\"selectedsideMenuConfigRow\\\">\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"menuname\\\">Menu Name</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" pInputText id=\\\"key\\\" [(ngModel)]=\\\"selectedsideMenuConfigRow.menuName\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"menuIconUrl\\\">Menu Icon Class</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" pInputText id=\\\"key\\\"  [(ngModel)]=\\\"selectedsideMenuConfigRow.menuIconUrl\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"menuKey\\\">Menu Key</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pTooltip=\\\"Enter Significant Menu Key\\\" tooltipPosition=\\\"bottom\\\" pInputText id=\\\"key\\\" [(ngModel)]=\\\"selectedsideMenuConfigRow.menuKey\\\" />\\n    </div>\\n\\n    <div class=\\\"ui-g-2\\\">\\n      <label for=\\\"isActive\\\">isActive</label>\\n    </div>\\n    <div class=\\\"ui-g-10\\\">\\n      <input pTooltip=\\\"Enter your username\\\" tooltipPosition=\\\"bottom\\\" pInputText id=\\\"value\\\" [(ngModel)]=\\\"selectedsideMenuConfigRow.isActive\\\" />\\n    </div>\\n\\n  </div>\\n  <p-footer>\\n    <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix\\\">\\n\\n      <div *ngIf=\\\"role=='user'\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"sideMenuConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n      </div>\\n      <div *ngIf=\\\"role=='admin'\\\">\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"sideMenuConfigCancel()\\\" label=\\\"Cancel\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"sideMenuConfigDelete()\\\" label=\\\"Delete\\\"></button>\\n        <button type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"sideMenuConfigSave()\\\" label=\\\"Save\\\"></button>\\n      </div>\\n\\n    </div>\\n  </p-footer>\\n</p-dialog>\\n\\n\\n<p-table [columns]=\\\"sideMenuConfigCols\\\" [value]=\\\"sideMenuConfigRows\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedsideMenuConfigRow\\\" (onRowSelect)=\\\"onRowSelectsideMenuConfig($event)\\\"\\n  [paginator]=\\\"false\\\" rows=\\\"10\\\">\\n  <ng-template pTemplate=\\\"header\\\" let-columns>\\n    <tr>\\n      <th *ngFor=\\\"let col of columns\\\">\\n        {{col.header}}\\n      </th>\\n    </tr>\\n  </ng-template>\\n  <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n    <tr [pSelectableRow]=\\\"rowData\\\">\\n      <td *ngFor=\\\"let col of columns\\\">\\n        {{rowData[col.field]}}\\n      </td>\\n    </tr>\\n  </ng-template>\\n\\n  <ng-template pTemplate=\\\"summary\\\" let-rowData>\\n    <div style=\\\"text-align:left\\\">\\n      <button type=\\\"button\\\" pButton icon=\\\"pi pi-plus\\\" (click)=\\\"showDialogToAddsideMenuConfig()\\\" label=\\\"Add\\\"></button>\\n    </div>\\n  </ng-template>\\n</p-table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-sidemenu',\n  templateUrl: './sidemenu.component.html',\n  styleUrls: ['./sidemenu.component.css']\n})\nexport class SidemenuComponent implements OnInit {\n\n  @Input() role: any;\n  displayDialogForsideMenuconfig: boolean;\n  selectedsideMenuConfigRow: any;\n  sideMenuConfigRows: any;\n  sideMenuConfigCols: any;\n  newsideMenuConfig: boolean = false;\n\n  constructor(private sharedService: SharedService) { }\n\n  ngOnInit() {\n\n    this.sideMenuConfigCols = [\n      { field: 'menuName', header: 'Menu Name' },\n      { field: 'menuIconUrl', header: 'Menu Icon Class' },\n      { field: 'menuKey', header: 'Menu Key' },\n      { field: 'isActive', header: 'isActive' }\n    ];\n    this.initialize();\n  }\n\n  initialize() {\n    this.sharedService.getMasterConfig().subscribe((config: any) => {\n      console.log(config.sidemenuConfig);\n\n      this.sideMenuConfigRows = config.sidemenuConfig.sort(function (a, b) {\n        if (a.menuName < b.menuName) { return -1; }\n        if (a.menuName > b.menuName) { return 1; }\n        return 0;\n      });\n\n    });\n  }\n\n  onRowSelectsideMenuConfig(event) {\n    this.selectedsideMenuConfigRow = { ...event.data };\n    this.displayDialogForsideMenuconfig = true;\n  }\n\n  showDialogToAddsideMenuConfig() {\n    this.newsideMenuConfig = true;\n    this.selectedsideMenuConfigRow = {};\n    this.displayDialogForsideMenuconfig = true;\n  }\n\n  sideMenuConfigSave() {\n    this.selectedsideMenuConfigRow[\"isActive\"] = Number(this.selectedsideMenuConfigRow[\"isActive\"]);\n    if (this.newsideMenuConfig) {\n      // direct insert to mongoDb\n      this.selectedsideMenuConfigRow[\"opType\"] = 1\n      console.log(\"To Insert New Document:- \", this.selectedsideMenuConfigRow);\n    } else {\n      // find index and update to mongodb\n      this.selectedsideMenuConfigRow[\"opType\"] = 0\n      console.log(\"To Update Document:- \", this.selectedsideMenuConfigRow);\n    }\n\n    this.crudAndRefresh();\n\n    this.displayDialogForsideMenuconfig = false;\n  }\n\n  crudAndRefresh() {\n    this.sharedService.saveOrUpdateSideMenuConfig(this.selectedsideMenuConfigRow).subscribe((d: any) => {\n      this.initialize();\n    });\n  }\n\n  sideMenuConfigDelete() {\n    this.selectedsideMenuConfigRow[\"opType\"] = -1;\n    this.crudAndRefresh();\n    this.selectedsideMenuConfigRow = null;\n    this.displayDialogForsideMenuconfig = false;\n    console.log(\"After Deleting\");\n  }\n\n  sideMenuConfigCancel() {\n    this.displayDialogForsideMenuconfig = false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.log(err));\n"],"sourceRoot":""}